buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.2.RELEASE"
    }
}

description='Spring Recipes 4th Edition - Sources'

allprojects {
    group = 'com.apress.springrecipes'


    // Define repositorie to get dependencies
    repositories {
        mavenCentral()
        // Public Spring artifacts
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.spring.io/libs-release"}
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/libs-snapshot" }
    }
}

subprojects { subproject ->

    apply plugin: 'java'
    apply plugin: "io.spring.dependency-management"

    ext['spring-hateoas.version'] = '0.24.0.BUILD-SNAPSHOT'
    ext['springIOPlatform'] = 'Cairo-BUILD-SNAPSHOT'
    ext['apacheCxfVersion'] = '3.1.10'
    ext['neo4jVersion'] = '3.13'

	compileJava.options*.compilerArgs = [
		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
		"-Xlint:try", "-Xlint:fallthrough", "-Xlint:rawtypes", "-Xlint:deprecation",
		"-Xlint:unchecked", "-Xlint:-options"
	]

	compileTestJava.options*.compilerArgs = [
		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
		"-Xlint:try", "-Xlint:-fallthrough", "-Xlint:-rawtypes", "-Xlint:-deprecation",
		"-Xlint:-unchecked", "-Xlint:-options"]

    sourceCompatibility=1.8
    targetCompatibility=1.8

	configurations {
		// We want to use SLF4J for logging, ban commons-logging
		all*.exclude group: 'commons-logging', module: 'commons-logging'
	}

    dependencyManagement {
        imports {
            mavenBom "io.spring.platform:platform-bom:$springIOPlatform"
        }
    }

	dependencies {
		compile("org.slf4j:slf4j-api")
		compile("org.slf4j:jcl-over-slf4j")
		compile("ch.qos.logback:logback-classic")

    	// Add dependencies for testing (these will only be used for the testing phase)
		testCompile("junit:junit")
		testCompile("org.mockito:mockito-core")
        testCompile("org.assertj:assertj-core")
		testCompile("org.springframework:spring-test")
	}

	task copyDependenciesToLibDir( type: Copy ) {
		into "$buildDir/libs/lib"
		from configurations.runtime
	}

    jar {
        // Copy jar dependencies and add to Class-Path.
        dependsOn copyDependenciesToLibDir
        def deps = fileTree(dir: "$buildDir/libs/lib", include: '*.jar')
        manifest.attributes("Class-Path": deps.files.collect {'lib/'+it.name}.join(' '))
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}